<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="c53f6aab-e668-48d0-9ea1-b292e1858274" name="Changes" comment="Optimize YouTube API script and load saved progress&#10;&#10;Refactored the YouTube API script to support resuming interrupted data collection by loading previously saved video and comment data. Added safeguards against redundant processing and incremental data saving for improved efficiency and reliability.">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/01-Youtube_API.ipynb" beforeDir="false" afterPath="$PROJECT_DIR$/01-Youtube_API.ipynb" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Jupyter Notebook" />
      </list>
    </option>
  </component>
  <component name="FlaskConsoleOptions" custom-start-script="import sys; print('Python %s on %s' % (sys.version, sys.platform)); sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo, NoAppException&#10;for module in [&quot;main.py&quot;, &quot;wsgi.py&quot;, &quot;app.py&quot;]:&#10;    try: locals().update(ScriptInfo(app_import_path=module, create_app=None).load_app().make_shell_context()); print(&quot;\nFlask App: %s&quot; % app.import_name); break&#10;    except NoAppException: pass">
    <envs>
      <env key="FLASK_APP" value="app" />
    </envs>
    <option name="myCustomStartScript" value="import sys; print('Python %s on %s' % (sys.version, sys.platform)); sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo, NoAppException&#10;for module in [&quot;main.py&quot;, &quot;wsgi.py&quot;, &quot;app.py&quot;]:&#10;    try: locals().update(ScriptInfo(app_import_path=module, create_app=None).load_app().make_shell_context()); print(&quot;\nFlask App: %s&quot; % app.import_name); break&#10;    except NoAppException: pass" />
    <option name="myEnvs">
      <map>
        <entry key="FLASK_APP" value="app" />
      </map>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;z5462656TianzheLi&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/z5462656TianzheLi/COMM5007_Group_Project.git&quot;,
    &quot;accountId&quot;: &quot;ca7a2bc2-dac5-4fd7-be5a-28f2f816bb19&quot;
  }
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 6
}</component>
  <component name="ProjectId" id="2vMRsuoqI9sgagHai6aCOZ9V1G4" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-1632447f56bf-JavaScript-PY-243.26053.29" />
        <option value="bundled-python-sdk-b1dbf8ef85a6-4df51de95216-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-243.26053.29" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="c53f6aab-e668-48d0-9ea1-b292e1858274" name="Changes" comment="" />
      <created>1743953166496</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1743953166496</updated>
      <workItem from="1743953168993" duration="565000" />
      <workItem from="1743953749828" duration="444000" />
      <workItem from="1743954201296" duration="5000" />
      <workItem from="1743954387665" duration="615000" />
      <workItem from="1743955011619" duration="442000" />
      <workItem from="1743955532946" duration="6080000" />
    </task>
    <task id="LOCAL-00001" summary="Add initial project setup with README, requirements, and notebook&#10;&#10;Include a sample Jupyter Notebook, README for project overview, and requirements.txt for dependencies. Also added PyCharm project configuration files to enable proper IDE support and version control setup.">
      <option name="closed" value="true" />
      <created>1743953267603</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1743953267603</updated>
    </task>
    <task id="LOCAL-00002" summary="Add YouTube API script, update `sample.ipynb` and configs&#10;&#10;Introduced a comprehensive YouTube API script for video and comment data collection. Updated `sample.ipynb` with additional code examples, adjusted project configurations, and excluded the `models` folder in IDE settings. Added a new `TEST.ipynb` for testing purposes.">
      <option name="closed" value="true" />
      <created>1743958597428</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1743958597428</updated>
    </task>
    <task id="LOCAL-00003" summary="Optimize YouTube API script and load saved progress&#10;&#10;Refactored the YouTube API script to support resuming interrupted data collection by loading previously saved video and comment data. Added safeguards against redundant processing and incremental data saving for improved efficiency and reliability.">
      <option name="closed" value="true" />
      <created>1743959519106</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1743959519106</updated>
    </task>
    <option name="localTasksCounter" value="4" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Add initial project setup with README, requirements, and notebook&#10;&#10;Include a sample Jupyter Notebook, README for project overview, and requirements.txt for dependencies. Also added PyCharm project configuration files to enable proper IDE support and version control setup." />
    <MESSAGE value="Add YouTube API script, update `sample.ipynb` and configs&#10;&#10;Introduced a comprehensive YouTube API script for video and comment data collection. Updated `sample.ipynb` with additional code examples, adjusted project configurations, and excluded the `models` folder in IDE settings. Added a new `TEST.ipynb` for testing purposes." />
    <MESSAGE value="Optimize YouTube API script and load saved progress&#10;&#10;Refactored the YouTube API script to support resuming interrupted data collection by loading previously saved video and comment data. Added safeguards against redundant processing and incremental data saving for improved efficiency and reliability." />
    <option name="LAST_COMMIT_MESSAGE" value="Optimize YouTube API script and load saved progress&#10;&#10;Refactored the YouTube API script to support resuming interrupted data collection by loading previously saved video and comment data. Added safeguards against redundant processing and incremental data saving for improved efficiency and reliability." />
  </component>
</project>